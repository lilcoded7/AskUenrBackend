# Generated by Django 5.2.4 on 2025-07-15 19:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('askuenr', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_name', models.CharField(help_text='e.g., Admissions Office, Main Switchboard', max_length=255)),
                ('contact_type', models.CharField(choices=[('Admissions', 'Admissions Office'), ('Registrar', "Registrar's Office"), ('Finance', 'Finance Directorate'), ('IT Helpdesk', 'IT Helpdesk'), ('Health Services', 'Health Services'), ('Security', 'Security Office'), ('General Enquiries', 'General Enquiries'), ('Other', 'Other')], default='General Enquiries', max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('physical_address', models.TextField(blank=True, null=True)),
                ('operating_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Contact Information',
                'ordering': ['entity_name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(help_text='e.g., Auditorium, Specific Lecture Hall, Online', max_length=255)),
                ('event_type', models.CharField(choices=[('Academic', 'Academic Event'), ('Social', 'Social Event'), ('Sports', 'Sports Event'), ('Cultural', 'Cultural Event'), ('Workshop', 'Workshop/Seminar'), ('Public Lecture', 'Public Lecture'), ('Other', 'Other')], default='Other', max_length=50)),
                ('organizer', models.CharField(blank=True, help_text='Department, Club, Office, etc.', max_length=255, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('registration_link', models.URLField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=True, help_text='Is this event open to the general public?')),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
            ],
            options={
                'verbose_name_plural': 'Events',
                'ordering': ['start_date_time'],
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('scholarship_type', models.CharField(choices=[('Merit-based', 'Merit-based'), ('Need-based', 'Need-based'), ('Research', 'Research Scholarship'), ('International', 'International Scholarship'), ('Departmental', 'Departmental Scholarship'), ('Other', 'Other')], max_length=50)),
                ('eligibility_criteria', models.TextField(help_text='Who can apply? GPA, program, nationality, etc.')),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('amount_or_benefits', models.CharField(blank=True, help_text='e.g., Full tuition, GHS 5000, Accommodation', max_length=255, null=True)),
                ('application_link', models.URLField(blank=True, null=True)),
                ('contact_info', models.TextField(blank=True, help_text='Email or phone for inquiries.', null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Scholarships',
                'ordering': ['-is_active', 'application_deadline'],
            },
        ),
        migrations.AddField(
            model_name='campusservice',
            name='service_category',
            field=models.CharField(blank=True, choices=[('Academic Support', 'Academic Support'), ('Student Life', 'Student Life'), ('Health & Wellness', 'Health & Wellness'), ('Administrative', 'Administrative'), ('IT Support', 'IT Support'), ('Facilities', 'Facilities'), ('Other', 'Other')], max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='campusservice',
            name='service_manager',
            field=models.ForeignKey(blank=True, help_text='The staff member responsible for this service.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_services', to='askuenr.staffprofile'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_materials_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='learning_outcomes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, help_text='Other courses required before taking this one.', related_name='required_for', to='askuenr.course'),
        ),
        migrations.AddField(
            model_name='department',
            name='office_location',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='feestructure',
            name='currency',
            field=models.CharField(default='GHS', help_text='Currency of the fee, e.g., GHS, USD', max_length=10),
        ),
        migrations.AddField(
            model_name='feestructure',
            name='is_refundable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='feestructure',
            name='payment_methods',
            field=models.TextField(blank=True, help_text='Accepted payment methods, e.g., Bank Transfer, Mobile Money', null=True),
        ),
        migrations.AddField(
            model_name='newsandannouncement',
            name='event_date_time',
            field=models.DateTimeField(blank=True, help_text='For event-related announcements.', null=True),
        ),
        migrations.AddField(
            model_name='newsandannouncement',
            name='external_link',
            field=models.URLField(blank=True, help_text='Link to the full article or external resource.', null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='accreditation_status',
            field=models.CharField(blank=True, help_text='e.g., Accredited by NAB, Professional Body Accreditation', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='min_wassce_aggregate',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='program_coordinator',
            field=models.ForeignKey(blank=True, help_text='The staff member responsible for coordinating this program.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinated_programs', to='askuenr.staffprofile'),
        ),
        migrations.AddField(
            model_name='program',
            name='required_core_subjects',
            field=models.CharField(blank=True, help_text='Comma-separated list, e.g., English, Mathematics, Integrated Science', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='required_elective_subjects',
            field=models.CharField(blank=True, help_text='Comma-separated list, e.g., Physics, Chemistry, Elective Mathematics', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='academic_qualifications',
            field=models.TextField(blank=True, help_text='Degrees, institutions, and years.', null=True),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='google_scholar_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='linkedin_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='office_hours',
            field=models.CharField(blank=True, help_text='e.g., Mon-Fri, 9 AM - 4 PM', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='office_location',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='researchgate_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='contact_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='enrollment_status',
            field=models.CharField(blank=True, choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Distance', 'Distance Learning')], max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='nationality',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='university',
            name='accreditation_status',
            field=models.CharField(blank=True, help_text='e.g., Fully Accredited, Provisional', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='university',
            name='international_ranking',
            field=models.CharField(blank=True, help_text='e.g., QS World Ranking, Times Higher Education', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='university',
            name='national_ranking',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='university',
            name='vice_chancellor',
            field=models.OneToOneField(blank=True, help_text='The current Vice-Chancellor of the University.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vice_chancellor_of_university', to='askuenr.staffprofile'),
        ),
        migrations.AlterField(
            model_name='feestructure',
            name='fee_type',
            field=models.CharField(choices=[('Tuition', 'Tuition Fee'), ('Accommodation', 'Accommodation Fee'), ('Examination', 'Examination Fee'), ('Other', 'Other Fee'), ('Application', 'Application Fee'), ('Graduation', 'Graduation Fee')], max_length=50),
        ),
        migrations.AlterField(
            model_name='newsandannouncement',
            name='category',
            field=models.CharField(choices=[('Admissions', 'Admissions'), ('Events', 'Events'), ('Policy', 'Policy Updates'), ('Academic', 'Academic Information'), ('General', 'General News'), ('Scholarship', 'Scholarship Opportunity'), ('Research', 'Research News')], default='General', max_length=50),
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('location_address', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campuses', to='askuenr.university')),
            ],
            options={
                'verbose_name_plural': 'Campuses',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='school',
            name='campus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schools_on_campus', to='askuenr.campus'),
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(unique=True)),
                ('answer', models.TextField()),
                ('category', models.CharField(choices=[('Admissions', 'Admissions'), ('Academics', 'Academics'), ('Fees & Financial Aid', 'Fees & Financial Aid'), ('Campus Life', 'Campus Life'), ('IT Support', 'IT Support'), ('Services', 'Services'), ('General', 'General Information')], default='General', max_length=100)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('related_departments', models.ManyToManyField(blank=True, related_name='faqs', to='askuenr.department')),
                ('related_programs', models.ManyToManyField(blank=True, related_name='faqs', to='askuenr.program')),
            ],
            options={
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'question'],
            },
        ),
    ]
