# Generated by Django 5.2.4 on 2025-07-15 19:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CampusService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('contact_info', models.TextField(blank=True, help_text='Phone numbers, emails, office hours, etc.', null=True)),
                ('location', models.CharField(blank=True, help_text='Physical location on campus.', max_length=255, null=True)),
                ('operating_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Campus Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='University of Energy and Natural Resources', max_length=255)),
                ('motto', models.CharField(blank=True, max_length=255, null=True)),
                ('history', models.TextField(help_text='A brief history of UENR, including its establishment and key milestones.')),
                ('vision', models.TextField(blank=True, null=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('core_values', models.TextField(blank=True, null=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'University Information',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('program_type', models.CharField(choices=[('Diploma', 'Diploma'), ('Undergraduate', 'Undergraduate'), ('Postgraduate', 'Postgraduate'), ('PhD', 'PhD')], max_length=20)),
                ('duration_years', models.IntegerField(help_text='Duration of the program in years.')),
                ('description', models.TextField(blank=True, null=True)),
                ('admission_requirements', models.TextField(help_text='Detailed admission requirements (e.g., WASSCE aggregates, specific subjects).')),
                ('career_prospects', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, help_text='The primary department offering this program (can be multidisciplinary).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offered_programs', to='askuenr.department')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='askuenr.school')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='askuenr.school'),
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, choices=[('Prof.', 'Professor'), ('Dr.', 'Doctor'), ('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Mrs.', 'Mrs.')], max_length=50, null=True)),
                ('position', models.CharField(choices=[('VC', 'Vice-Chancellor'), ('Pro-VC', 'Pro Vice-Chancellor'), ('Registrar', 'Registrar'), ('Lecturer', 'Lecturer'), ('Snr. Lecturer', 'Senior Lecturer'), ('Assoc. Prof.', 'Associate Professor'), ('Admin Staff', 'Administrative Staff'), ('Other', 'Other Staff')], max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, help_text='A short biography or professional summary.', null=True)),
                ('research_interests', models.TextField(blank=True, null=True)),
                ('is_hod', models.BooleanField(default=False, help_text='Is this staff member a Head of Department?')),
                ('is_dean', models.BooleanField(default=False, help_text='Is this staff member a Dean of a School?')),
                ('is_admin_staff', models.BooleanField(default=False, help_text="Is this staff member part of the central administration (e.g., Registrar's Office, VC's Office)?")),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='staff_profiles/')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_members', to='askuenr.department')),
            ],
            options={
                'verbose_name_plural': 'Staff Profiles',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='school',
            name='dean',
            field=models.OneToOneField(blank=True, help_text='The Dean of this School.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dean_of_school', to='askuenr.staffprofile'),
        ),
        migrations.CreateModel(
            name='NewsAndAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('target_audience', models.CharField(choices=[('All', 'All Users'), ('Students', 'Current Students'), ('Staff', 'Staff Members'), ('Prospective', 'Prospective Applicants'), ('Alumni', 'Alumni')], default='All', max_length=20)),
                ('category', models.CharField(choices=[('Admissions', 'Admissions'), ('Events', 'Events'), ('Policy', 'Policy Updates'), ('Academic', 'Academic Information'), ('General', 'General News'), ('Scholarship', 'Scholarship Opportunity')], default='General', max_length=50)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='news_attachments/')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_news', to='askuenr.staffprofile')),
            ],
            options={
                'verbose_name_plural': 'News and Announcements',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='head_of_department',
            field=models.OneToOneField(blank=True, help_text='The Head of this Department.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hod_of_department', to='askuenr.staffprofile'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='e.g., CS 101, MECH 203', max_length=20, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('credit_hours', models.DecimalField(decimal_places=1, max_digits=3)),
                ('description', models.TextField(blank=True, null=True)),
                ('semester_offered', models.CharField(blank=True, choices=[('Harmattan', 'Harmattan Semester'), ('Rain', 'Rain Semester'), ('Both', 'Both Semesters'), ('Other', 'Other (e.g., Summer Session)')], max_length=20, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='askuenr.department')),
                ('programs', models.ManyToManyField(related_name='courses', to='askuenr.program')),
                ('lecturers', models.ManyToManyField(blank=True, related_name='taught_courses', to='askuenr.staffprofile')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('current_level', models.IntegerField(choices=[(100, 'Level 100'), (200, 'Level 200'), (300, 'Level 300'), (400, 'Level 400'), (500, 'Level 500'), (600, 'Level 600')], default=100)),
                ('admission_year', models.IntegerField()),
                ('is_current_student', models.BooleanField(default=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='student_profiles/')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='askuenr.program')),
            ],
            options={
                'verbose_name_plural': 'Student Profiles',
                'ordering': ['student_id'],
            },
        ),
        migrations.CreateModel(
            name='GPA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpa_value', models.DecimalField(decimal_places=3, default=0.0, max_digits=4)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gpa', to='askuenr.studentprofile')),
            ],
            options={
                'verbose_name_plural': 'GPAs',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='askuenr.university'),
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('Tuition', 'Tuition Fee'), ('Accommodation', 'Accommodation Fee'), ('Examination', 'Examination Fee'), ('Other', 'Other Fee')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('academic_year', models.CharField(help_text='e.g., 2024/2025', max_length=9)),
                ('notes', models.TextField(blank=True, help_text='Payment deadlines, installment options, etc.', null=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fees', to='askuenr.program')),
            ],
            options={
                'verbose_name_plural': 'Fee Structures',
                'ordering': ['academic_year', 'fee_type'],
                'unique_together': {('fee_type', 'academic_year', 'program')},
            },
        ),
        migrations.CreateModel(
            name='AcademicRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(help_text='e.g., 2023/2024', max_length=9)),
                ('semester', models.CharField(choices=[('Harmattan', 'Harmattan Semester'), ('Rain', 'Rain Semester'), ('Summer', 'Summer Session')], max_length=20)),
                ('raw_score', models.IntegerField(blank=True, help_text='Score out of 100', null=True)),
                ('grade', models.CharField(blank=True, help_text='e.g., A, B+, C, F', max_length=5, null=True)),
                ('grade_point', models.DecimalField(blank=True, decimal_places=2, help_text='Grade point on a 4.0 scale', max_digits=3, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='askuenr.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_records', to='askuenr.studentprofile')),
            ],
            options={
                'ordering': ['academic_year', 'semester', 'student__last_name'],
                'unique_together': {('student', 'course', 'academic_year', 'semester')},
            },
        ),
    ]
